returncode = 0
stderr = ""
stdout = "integer_type (int)
dec_digits (23)
dec_integer (dec_digits (23)\\n)
declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)
dec_digits (0)
dec_integer (dec_digits (0)\\n)
greater_than_or_equal (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)
postdecrement (foo, ^)
op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)
expression (expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (greater_than_or_equal (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (greater_than_or_equal (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (postdecrement (foo, ^)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (postdecrement (foo, ^)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)
statement (expression (expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (greater_than_or_equal (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (greater_than_or_equal (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (postdecrement (foo, ^)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (postdecrement (foo, ^)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)
integer_type (int)
dec_digits (23)
dec_integer (dec_digits (23)\\n)
declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)
dec_digits (0)
dec_integer (dec_digits (0)\\n)
greater_than_or_equal (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)
postdecrement (foo, ^)
op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)
statement (expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)
code_block (statement (expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)\\n, statement (expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)\\n, ^)
expression (expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (greater_than_or_equal (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (greater_than_or_equal (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (postdecrement (foo, ^)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (postdecrement (foo, ^)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (code_block (statement (expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)\\n, statement (expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)\\n, ^)\\n)\\n, expression (code_block (statement (expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)\\n, statement (expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)\\n, ^)\\n)\\n)
statement (expression (expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, type (builtin_type (integer_type (int)\\n)\\n)\\n, type (builtin_type (integer_type (int)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (23)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (greater_than_or_equal (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (greater_than_or_equal (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (number (integer (dec_integer (dec_digits (0)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (postdecrement (foo, ^)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (postdecrement (foo, ^)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, expression (code_block (statement (expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)\\n, statement (expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)\\n, ^)\\n)\\n, expression (code_block (statement (expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)\\n, statement (expression (assignment_expression (op_assignment (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (bar)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, +=, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (foo)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)\\n, ^)\\n)\\n)\\n, ^)
2 statements.
"
