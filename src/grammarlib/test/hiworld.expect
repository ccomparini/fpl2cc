returncode = 0
stderr = ""
stdout = "builtin_type (string)
constant (\"hi world\\n\")
declaration (message, type (builtin_type (string)\\n)\\n, type (builtin_type (string)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (\"hi world\\n\")\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (\"hi world\\n\")\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)
statement (expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (message, type (builtin_type (string)\\n)\\n, type (builtin_type (string)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (\"hi world\\n\")\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (constant (\"hi world\\n\")\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)
declaration (foo, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (message.length)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (message.length)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (message.length)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)
statement (expression (assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (declaration (foo, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (message.length)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (message.length)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, assignment_expression (logical_or_expression (logical_xor_expression (logical_and_expression (comparison_expression (relational_expression (bitwise_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (message.length)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n)\\n, ^)
statement (^)
3 statements.
"
