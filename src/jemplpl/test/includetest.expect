returncode = 0
stderr = ""
stdout = "
OH HAI I IS AT LINE 2 IN \"src/jemplpl/test/includetest.jemp\" 
// Start of include

OH HAI I IS AT LINE 1 IN \"src/jemplpl/test/includetest.cc\" 
#include <cstdlib>
#include <iostream>
#include <string>

#include \"includetest.h\"
#include \"util/searchpath.h\"
#include \"util/stringformat.h\"

//static const auto data_dir_var = \"DATA_DIR\";
static const auto data_dir_var = \"SRC_DIR\";

int main() {
    const char *data_dir = std::getenv(data_dir_var);
    Searchpath src_path;
    if(!src_path.append_from_env(data_dir_var)) {
        jerror::error(stringformat(
            \"{} not set in env - test may not work\\n\", data_dir_var
        ));
    }
    //std::cerr << stringformat(\"searching paths: {}\\n\", src_path);
    std::cout << includetest(src_path.find(\"includetest.cc\"));

    return 0;
}


OH HAI I IS AT LINE 4 IN \"src/jemplpl/test/includetest.jemp\" 
// End of include

// Embedded file follows:

OH HAI I IS AT LINE 1 IN \"src/jemplpl/test/embedtest.txt\" 
This is line 1 of some embedded content.

More \"content\", as you earthlings call it.

This is line 5.

aliens and stuff  ðŸ‘½ ðŸ‘» ðŸ¥¸ ðŸ¤‘ ðŸ§  ðŸ« 
The last one is how I feel after trying to figure out what happens
at jemp compile time vs dynamically when called from fpl2cc vs cc.

This is the last line of embedded content.

OH HAI I IS AT LINE 8 IN \"src/jemplpl/test/includetest.jemp\" 
// End of embedded file

"
