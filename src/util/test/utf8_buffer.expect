returncode = 0
stderr = ""
stdout = "lines start at: { 0, 0, 4, 8, 14, 15, 16, 20 }
1 (byte 0): 'one'
2 (byte 4): 'two'
3 (byte 8): 'three'
4 (byte 14): ''
5 (byte 15): ''
6 (byte 16): 'six'
7 (byte 20): ''
byte 0 is on line 1 (starting at 0). rest of line: 'one'
byte 1 is on line 1 (starting at 0). rest of line: 'ne'
byte 2 is on line 1 (starting at 0). rest of line: 'e'
byte 3 is on line 1 (starting at 0). rest of line: ''
byte 4 is on line 2 (starting at 4). rest of line: 'two'
byte 5 is on line 2 (starting at 4). rest of line: 'wo'
byte 6 is on line 2 (starting at 4). rest of line: 'o'
byte 7 is on line 2 (starting at 4). rest of line: ''
byte 8 is on line 3 (starting at 8). rest of line: 'three'
byte 9 is on line 3 (starting at 8). rest of line: 'hree'
byte 10 is on line 3 (starting at 8). rest of line: 'ree'
byte 11 is on line 3 (starting at 8). rest of line: 'ee'
byte 12 is on line 3 (starting at 8). rest of line: 'e'
byte 13 is on line 3 (starting at 8). rest of line: ''
byte 14 is on line 4 (starting at 14). rest of line: ''
byte 15 is on line 5 (starting at 15). rest of line: ''
byte 16 is on line 6 (starting at 16). rest of line: 'six'
byte 17 is on line 6 (starting at 16). rest of line: 'ix'
byte 18 is on line 6 (starting at 16). rest of line: 'x'
byte 19 is on line 6 (starting at 16). rest of line: ''
byte 20 is on line 7 (starting at 20). rest of line: ''
line number just past the end gives 7 (starts at 20)
asking for the line number way past the end gives 7
lines start at: { 0, 0 }
1 (byte 0): 'hi there'
byte 0 is on line 1 (starting at 0). rest of line: 'hi there'
byte 1 is on line 1 (starting at 0). rest of line: 'i there'
byte 2 is on line 1 (starting at 0). rest of line: ' there'
byte 3 is on line 1 (starting at 0). rest of line: 'there'
byte 4 is on line 1 (starting at 0). rest of line: 'here'
byte 5 is on line 1 (starting at 0). rest of line: 'ere'
byte 6 is on line 1 (starting at 0). rest of line: 're'
byte 7 is on line 1 (starting at 0). rest of line: 'e'
byte 8 is on line 1 (starting at 0). rest of line: ''
line number just past the end gives 1 (starts at 0)
asking for the line number way past the end gives 1
lines start at: { 0, 0, 1, 8, 15 }
1 (byte 0): ''
2 (byte 1): 'line 2'
3 (byte 8): 'line 3'
4 (byte 15): ''
byte 0 is on line 1 (starting at 0). rest of line: ''
byte 1 is on line 2 (starting at 1). rest of line: 'line 2'
byte 2 is on line 2 (starting at 1). rest of line: 'ine 2'
byte 3 is on line 2 (starting at 1). rest of line: 'ne 2'
byte 4 is on line 2 (starting at 1). rest of line: 'e 2'
byte 5 is on line 2 (starting at 1). rest of line: ' 2'
byte 6 is on line 2 (starting at 1). rest of line: '2'
byte 7 is on line 2 (starting at 1). rest of line: ''
byte 8 is on line 3 (starting at 8). rest of line: 'line 3'
byte 9 is on line 3 (starting at 8). rest of line: 'ine 3'
byte 10 is on line 3 (starting at 8). rest of line: 'ne 3'
byte 11 is on line 3 (starting at 8). rest of line: 'e 3'
byte 12 is on line 3 (starting at 8). rest of line: ' 3'
byte 13 is on line 3 (starting at 8). rest of line: '3'
byte 14 is on line 3 (starting at 8). rest of line: ''
byte 15 is on line 4 (starting at 15). rest of line: ''
line number just past the end gives 4 (starts at 15)
asking for the line number way past the end gives 4
"
