@parameter: const productions &prds@
@parameter: const production_rule &rule@
@realign: #line {} "{}" @

@-for(int parmi = 0; parmi < rule.num_reduce_params(); parmi++) {-@
    @declare param: rule.reduce_param(parmi)@
    @declare vname: param.variable_name()@

    @-if(param.is_optional()){-@

        #line @rule.line_number()@ "@rule.filename()@"
        #error "no default for optional '@vname@' in rule @rule.to_str()@"
    @-} else if(!param.is_single()){-@
        #line @rule.line_number()@ "@rule.filename()@"
        #error "no default for multiple '@vname@' in rule @rule.to_str()@"
    @-} else {-@
        @-if(parmi > 0){@,@}-@ @/* argument separator */@
        @-if(param.is_nonterminal()) {-@
            @-vname@.val()
        @-} else {-@
            @/* by default, pass terminals a strings: */@
            @-vname@.val().to_str()
        @-}-@
    @-}-@
@-}-@

