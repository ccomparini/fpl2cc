@parameter: const std::string &regex @

std::cmatch match = reader->read_re("@c_str_escape(regex)@");
if(!match.empty()) {
    @/*
       to avoid looping infinitely in cases like:
           '('^ /x?/+ ')'^ -> y;
       where the /x?/ can match an empty string, and
       the step says match multiple times, don't allow
       it to do more than one empty match, because
       otherwise it'll loop indefinitely matching and
       pushing empty strings to the stack.
       This does mean that if you have multiple consecutive
       regexes which might match empty strings, only the
       first will match as an empty string.  These are
       all pathological cases which probably have no real
       application, but we need to handle them somehow
       other than stack overflows. So, here we are:
     */@
    if(match.length() || (lr_top().position() != position())) {
        result = Terminal(match.begin(), match.end());
    }
}

