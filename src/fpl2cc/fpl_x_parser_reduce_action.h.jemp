@parameter: const productions &prds@
@parameter: const production_rule &rule@
@declare return_type: prds.type_for(rule.product())@
@declare num_params: rule.num_reduce_params()@
@realign: #line {} "{}" @

@return_type@ @rule.rule_fn()@(
    @-for(int pind = 0; pind < num_params; pind++) {-@
        @declare step: rule.reduce_param(pind) @
        @- pind?", ":"" -@ StackSliceSpecialization<@prds.type_for(step.gexpr)@> @step.variable_name()-@
    @-}-@
) {
    // @rule.to_str()@
    @#fpl_x_parser_reduce_action_meta(rule)@

    @rule.reduce_code().format(false)@
}

